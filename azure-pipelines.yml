# Azure Pipelines for HW8 ingestion (Windows agent, robust path detection - FIXED)
trigger:
  branches:
    include:
      - main

pool:
  vmImage: 'windows-latest'

steps:
  - checkout: self

  - task: UsePythonVersion@0
    inputs:
      versionSpec: '3.11'

  # Show repo layout (debug) - PowerShell 5 friendly
  - powershell: |
      Write-Host "Repo root: $(Build.SourcesDirectory)"
      Get-ChildItem -Path "$(Build.SourcesDirectory)" -Recurse -Force | Select-Object -First 200 FullName
    displayName: 'List files (debug)'

  # Install Microsoft ODBC Driver 18 for SQL Server (x64) via MSI
  - powershell: |
      $ErrorActionPreference = "Stop"
      $url = "https://go.microsoft.com/fwlink/?linkid=2290265"  # msodbcsql18 x64
      $msi = "$(Agent.TempDirectory)\msodbcsql18.msi"
      Invoke-WebRequest -Uri $url -OutFile $msi
      Start-Process msiexec.exe -ArgumentList "/i `"$msi`" /qn IACCEPTMSODBCSQLLICENSETERMS=YES ADDLOCAL=ALL" -Wait -NoNewWindow
      Write-Host "ODBC 18 installed."
    displayName: 'Install ODBC Driver 18 (MSI)'

  # Install Python deps (auto-detect) - FIXED Join-Path usage
  - powershell: |
      $ErrorActionPreference = "Stop"
      $root = "$(Build.SourcesDirectory)"
      $req1 = Join-Path $root "HW8\requirements.txt"
      $req2 = Join-Path $root "requirements.txt"
      if (Test-Path $req1) {
        $req = $req1
      } elseif (Test-Path $req2) {
        $req = $req2
      } else {
        throw "requirements.txt not found at either `$req1 or `$req2"
      }
      Write-Host "Using requirements: $req"
      python -m pip install --upgrade pip
      pip install -r "$req"
    displayName: 'Install Python deps (auto-detect)'

  # Run ingestion (auto-detect) - FIXED Join-Path usage
  - powershell: |
      $ErrorActionPreference = "Stop"
      $root = "$(Build.SourcesDirectory)"
      $py1 = Join-Path $root "HW8\ingest.py"
      $py2 = Join-Path $root "ingest.py"
      if (Test-Path $py1) {
        $script = $py1
      } elseif (Test-Path $py2) {
        $script = $py2
      } else {
        throw "ingest.py not found at either `$py1 or `$py2"
      }
      Write-Host "Running: $script"
      python "$script"
    displayName: 'Run ingestion (auto-detect)'
    env:
      AZURE_SQL_SERVER: hwdbms.database.windows.net
      AZURE_SQL_DATABASE: hwdbms
      AZURE_SQL_USER: hwdbms
      AZURE_SQL_PASSWORD: $(AZURE_SQL_PASSWORD)
